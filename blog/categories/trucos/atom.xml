<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: trucos | Granada Perl Mongers]]></title>
  <link href="http://Granada-pm.github.io/blog/categories/trucos/atom.xml" rel="self"/>
  <link href="http://Granada-pm.github.io/"/>
  <updated>2014-07-02T20:13:08+02:00</updated>
  <id>http://Granada-pm.github.io/</id>
  <author>
    <name><![CDATA[JJ Merelo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Algunas buenas prácticas]]></title>
    <link href="http://Granada-pm.github.io/blog/algunas-buenas-practicas/"/>
    <updated>2014-07-02T19:47:11+02:00</updated>
    <id>http://Granada-pm.github.io/blog/algunas-buenas-practicas</id>
    <content type="html"><![CDATA[<p>En el <a href="http://cevug.ugr.es/perl">curso de Perl</a> virtual que venimos
impartiendo observamos que hay una serie de malas costumbres que se
repiten, sea porque todo el mundo sigue los mismos ejemplos (que,
ejem, algunos son nuestros) o porque simplemente han aprendido a
programar en sitios similares. Siguiendo una serie de buenas prácticas
Perleras, pero también de casi cualquier otro lenguaje, se hacen los
programas más legibles, se programa de forma más eficiente y los
programas son más mantenibles. Y en esto el manual definitivo es el
<a href="https://www.amazon.es/dp/B002L4EXI8?tag=atalaya-21&amp;camp=3634&amp;creative=24822&amp;linkCode=as4&amp;creativeASIN=B002L4EXI8&amp;adid=0Y9FGAY72E8FH4AWVJ46&amp;">Perl Best Practices de Damien Conway</a>,
pero también <a href="modernperlbooks.com/mt/index.html">Modern Perl</a> tiene un
enfoque que anima a usarlas.</p>

<p>En todo caso, hay muchas (y herramientas para llevarlas a cabo), pero
estas tratan de atajar ciertas cosas que se encuentran repetidamente
en nuestros cursos</p>

<ul>
<li><p>No se deben usar
<a href="http://stackoverflow.com/questions/4865447/demystifying-the-perl-glob"><code>GLOB</code>s</a>. Para
entendernos, esto es un GLOB
<code>
open(FILE, "&gt;este_es_un_file")
</code>
En Perl previo a la versión 5, era la forma estándar de usar
ficheros. Sin embargo, ahora se puede usar
<code>
open(my $file, "&gt;este_es_un_file")
</code>
y luego el <code>$file</code> lo puedes pasar como cualquier otra variable</p></li>
<li><p>Siempre, siempre, <code>use strict</code>y <code>use warnings</code>. Siempre. ¿He dicho
siempre? Para evitar errores comunes y también alguna mala práctica,
como no declarar el ámbito de las variables.</p></li>
<li><p>Usa un método consistente para darle nombre a las variables, y el
mejor es <code>$este_metodo</code>. Nada de CamelCaps y muchopeor
<code>$nicamelnicaps</code> porque no hay forma de entenderse.</p></li>
<li><p>Sigue las convenciones a la hora de nombrar variables (minúsculas)
módulos (primera mayúscula y cada letra después de un _) y
constantes y GLOBS (todo mayúsculas).</p></li>
<li><p>En general, las funciones no deben de incluir &ldquo;presentación&rdquo;. Eso
quiere decir que una rutina no debe ni de pedir información al
usuario (más sobre esto más tarde) ni de imprimir cosas. Que
devuelva información y el cliente de la función se encargue de
formatearla como el cliente quiera.</p></li>
<li><p>Los menús en pantalla son taaaan de los años 80. &ldquo;A continuación,
pulse el número de la opción correspondiente&rdquo; me trae a mi época
del BASIC del Spectrum. Hoy en día hay muchas otras formas de
elegir opciones. O haces un GUI como el FSM manda, usando <code>curses</code>
o <code>Tk</code>  o lo que te dé la gana, o introduces opciones desde línea
de órdenes o entrada estándar. Los programas en Perl deben estar
(en general) preparados para ser encadenados de esta forma
<code>mi_primer_programa.pl | ./segundo_programa.pl | y_este_tercero.pl
-o foo</code>  igual que &ldquo;Introduce un nombre de fichero&rdquo;. Usa el
<a href="http://campusvirtual.ull.es/ocw/file.php/43/perlexamples/node173.html">operador diamante</a>
para leer nombres de ficheros o entrada estándar indistintamente.</p></li>
<li><p>Usa control de versiones. De veras, úsalo. Usa
<a href="https://www.amazon.es/dp/B00K515GL2?tag=atalaya-21&amp;camp=3634&amp;creative=24822&amp;linkCode=as4&amp;creativeASIN=B00K515GL2&amp;adid=0QWZJD8TM41S32VW42EF&amp;">git</a></p></li>
</ul>


<p>No es que sean las únicas buenas prácticas, pero sí unas convenientes
y no demasiado complicadas.</p>
]]></content>
  </entry>
  
</feed>
